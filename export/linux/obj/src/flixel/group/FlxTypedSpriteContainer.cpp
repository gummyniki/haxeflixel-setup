// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedContainer
#include <flixel/group/FlxTypedContainer.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteContainer
#include <flixel/group/FlxTypedSpriteContainer.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_group__FlxSpriteContainer_SpriteContainer
#include <flixel/group/_FlxSpriteContainer/SpriteContainer.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_51127151304d14d3_32_new,"flixel.group.FlxTypedSpriteContainer","new",0x6b3ddb55,"flixel.group.FlxTypedSpriteContainer.new","flixel/group/FlxSpriteContainer.hx",32,0x1b8bad31)
HX_LOCAL_STACK_FRAME(_hx_pos_51127151304d14d3_37_initGroup,"flixel.group.FlxTypedSpriteContainer","initGroup",0xce9efec4,"flixel.group.FlxTypedSpriteContainer.initGroup","flixel/group/FlxSpriteContainer.hx",37,0x1b8bad31)
HX_LOCAL_STACK_FRAME(_hx_pos_51127151304d14d3_42_draw,"flixel.group.FlxTypedSpriteContainer","draw",0x644fb76f,"flixel.group.FlxTypedSpriteContainer.draw","flixel/group/FlxSpriteContainer.hx",42,0x1b8bad31)
HX_LOCAL_STACK_FRAME(_hx_pos_51127151304d14d3_57_set_group,"flixel.group.FlxTypedSpriteContainer","set_group",0xda072c57,"flixel.group.FlxTypedSpriteContainer.set_group","flixel/group/FlxSpriteContainer.hx",57,0x1b8bad31)
HX_LOCAL_STACK_FRAME(_hx_pos_51127151304d14d3_61_set_camera,"flixel.group.FlxTypedSpriteContainer","set_camera",0x87a3c28d,"flixel.group.FlxTypedSpriteContainer.set_camera","flixel/group/FlxSpriteContainer.hx",61,0x1b8bad31)
HX_LOCAL_STACK_FRAME(_hx_pos_51127151304d14d3_70_set_cameras,"flixel.group.FlxTypedSpriteContainer","set_cameras",0x27a67946,"flixel.group.FlxTypedSpriteContainer.set_cameras","flixel/group/FlxSpriteContainer.hx",70,0x1b8bad31)
namespace flixel{
namespace group{

void FlxTypedSpriteContainer_obj::__construct( ::Dynamic x, ::Dynamic y, ::Dynamic maxSize){
            	HX_STACKFRAME(&_hx_pos_51127151304d14d3_32_new)
HXDLIN(  32)		super::__construct(x,y,maxSize);
            	}

Dynamic FlxTypedSpriteContainer_obj::__CreateEmpty() { return new FlxTypedSpriteContainer_obj; }

void *FlxTypedSpriteContainer_obj::_hx_vtable = 0;

Dynamic FlxTypedSpriteContainer_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxTypedSpriteContainer_obj > _hx_result = new FlxTypedSpriteContainer_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool FlxTypedSpriteContainer_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x5f6ac8a1) {
		if (inClassId<=(int)0x2c01639b) {
			if (inClassId<=(int)0x288ce903) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x288ce903;
			} else {
				return inClassId==(int)0x2c01639b;
			}
		} else {
			return inClassId==(int)0x5f6ac8a1;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void FlxTypedSpriteContainer_obj::initGroup(int maxSize){
            	HX_GC_STACKFRAME(&_hx_pos_51127151304d14d3_37_initGroup)
HXDLIN(  37)		this->group =  ::flixel::group::_FlxSpriteContainer::SpriteContainer_obj::__alloc( HX_CTX ,::hx::ObjectPtr<OBJ_>(this),maxSize);
            	}


void FlxTypedSpriteContainer_obj::draw(){
            	HX_STACKFRAME(&_hx_pos_51127151304d14d3_42_draw)
HXLINE(  43)		::Array< ::Dynamic> oldDefaultCameras = ::flixel::FlxCamera_obj::_defaultCameras;
HXLINE(  44)		if (::hx::IsNotNull( this->_cameras )) {
HXLINE(  46)			::flixel::FlxCamera_obj::_defaultCameras = this->_cameras;
            		}
HXLINE(  49)		this->super::draw();
HXLINE(  51)		::flixel::FlxCamera_obj::_defaultCameras = oldDefaultCameras;
            	}


 ::flixel::group::FlxTypedGroup FlxTypedSpriteContainer_obj::set_group( ::flixel::group::FlxTypedGroup value){
            	HX_STACKFRAME(&_hx_pos_51127151304d14d3_57_set_group)
HXDLIN(  57)		HX_STACK_DO_THROW(HX_("FlxSpriteContainer.group cannot be set in FlxSpriteContainers",71,b1,1b,95));
HXDLIN(  57)		return null();
            	}


 ::flixel::FlxCamera FlxTypedSpriteContainer_obj::set_camera( ::flixel::FlxCamera value){
            	HX_STACKFRAME(&_hx_pos_51127151304d14d3_61_set_camera)
HXLINE(  63)		::Array< ::Dynamic> _hx_tmp;
HXDLIN(  63)		if (::hx::IsNull( value )) {
HXLINE(  63)			_hx_tmp = null();
            		}
            		else {
HXLINE(  63)			_hx_tmp = ::Array_obj< ::Dynamic>::__new(1)->init(0,value);
            		}
HXDLIN(  63)		this->_cameras = _hx_tmp;
HXLINE(  64)		return value;
            	}


::Array< ::Dynamic> FlxTypedSpriteContainer_obj::set_cameras(::Array< ::Dynamic> value){
            	HX_STACKFRAME(&_hx_pos_51127151304d14d3_70_set_cameras)
HXDLIN(  70)		return (this->_cameras = value);
            	}



::hx::ObjectPtr< FlxTypedSpriteContainer_obj > FlxTypedSpriteContainer_obj::__new( ::Dynamic x, ::Dynamic y, ::Dynamic maxSize) {
	::hx::ObjectPtr< FlxTypedSpriteContainer_obj > __this = new FlxTypedSpriteContainer_obj();
	__this->__construct(x,y,maxSize);
	return __this;
}

::hx::ObjectPtr< FlxTypedSpriteContainer_obj > FlxTypedSpriteContainer_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic x, ::Dynamic y, ::Dynamic maxSize) {
	FlxTypedSpriteContainer_obj *__this = (FlxTypedSpriteContainer_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxTypedSpriteContainer_obj), true, "flixel.group.FlxTypedSpriteContainer"));
	*(void **)__this = FlxTypedSpriteContainer_obj::_hx_vtable;
	__this->__construct(x,y,maxSize);
	return __this;
}

FlxTypedSpriteContainer_obj::FlxTypedSpriteContainer_obj()
{
}

::hx::Val FlxTypedSpriteContainer_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"draw") ) { return ::hx::Val( draw_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"initGroup") ) { return ::hx::Val( initGroup_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_group") ) { return ::hx::Val( set_group_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"set_camera") ) { return ::hx::Val( set_camera_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"set_cameras") ) { return ::hx::Val( set_cameras_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FlxTypedSpriteContainer_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *FlxTypedSpriteContainer_obj_sStaticStorageInfo = 0;
#endif

static ::String FlxTypedSpriteContainer_obj_sMemberFields[] = {
	HX_("initGroup",0f,ce,86,b5),
	HX_("draw",04,2c,70,42),
	HX_("set_group",a2,fb,ee,c0),
	HX_("set_camera",e2,54,91,ab),
	HX_("set_cameras",51,f1,98,73),
	::String(null()) };

::hx::Class FlxTypedSpriteContainer_obj::__mClass;

void FlxTypedSpriteContainer_obj::__register()
{
	FlxTypedSpriteContainer_obj _hx_dummy;
	FlxTypedSpriteContainer_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.group.FlxTypedSpriteContainer",e3,8c,56,9c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FlxTypedSpriteContainer_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FlxTypedSpriteContainer_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxTypedSpriteContainer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxTypedSpriteContainer_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace group
