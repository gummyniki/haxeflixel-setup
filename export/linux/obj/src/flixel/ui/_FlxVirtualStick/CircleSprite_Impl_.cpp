// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_system_FlxAssets
#include <flixel/system/FlxAssets.h>
#endif
#ifndef INCLUDED_flixel_ui__FlxVirtualStick_CircleSprite_Impl_
#include <flixel/ui/_FlxVirtualStick/CircleSprite_Impl_.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_12787fd799ce0f3e_189__new,"flixel.ui._FlxVirtualStick.CircleSprite_Impl_","_new",0xfd7d9acc,"flixel.ui._FlxVirtualStick.CircleSprite_Impl_._new","flixel/ui/FlxVirtualStick.hx",189,0xf07a354f)
HX_LOCAL_STACK_FRAME(_hx_pos_12787fd799ce0f3e_207_get_radius,"flixel.ui._FlxVirtualStick.CircleSprite_Impl_","get_radius",0x828727c6,"flixel.ui._FlxVirtualStick.CircleSprite_Impl_.get_radius","flixel/ui/FlxVirtualStick.hx",207,0xf07a354f)
HX_LOCAL_STACK_FRAME(_hx_pos_12787fd799ce0f3e_208_get_radiusSquared,"flixel.ui._FlxVirtualStick.CircleSprite_Impl_","get_radiusSquared",0x20dfae01,"flixel.ui._FlxVirtualStick.CircleSprite_Impl_.get_radiusSquared","flixel/ui/FlxVirtualStick.hx",208,0xf07a354f)
namespace flixel{
namespace ui{
namespace _FlxVirtualStick{

void CircleSprite_Impl__obj::__construct() { }

Dynamic CircleSprite_Impl__obj::__CreateEmpty() { return new CircleSprite_Impl__obj; }

void *CircleSprite_Impl__obj::_hx_vtable = 0;

Dynamic CircleSprite_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CircleSprite_Impl__obj > _hx_result = new CircleSprite_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CircleSprite_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6551ca65;
}

 ::flixel::FlxSprite CircleSprite_Impl__obj::_new(::hx::Null< Float >  __o_centerX,::hx::Null< Float >  __o_centerY, ::Dynamic graphic,::String backupId){
            		Float centerX = __o_centerX.Default(((Float)0.0));
            		Float centerY = __o_centerY.Default(((Float)0.0));
            	HX_GC_STACKFRAME(&_hx_pos_12787fd799ce0f3e_189__new)
HXDLIN( 189)		 ::flixel::FlxSprite this1 =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,centerX,centerY,graphic);
HXLINE( 192)		if (::hx::IsNull( graphic )) {
HXLINE( 194)			this1->set_frames(::flixel::_hx_system::FlxAssets_obj::getVirtualInputFrames());
HXLINE( 195)			this1->animation->set_frameName(backupId);
HXLINE( 196)			{
HXLINE( 196)				this1->set_width(( (Float)(this1->frameWidth) ));
HXDLIN( 196)				this1->set_height(( (Float)(this1->frameHeight) ));
            			}
            		}
HXLINE( 198)		this1->set_x((this1->x - (( (Float)(this1->frameWidth) ) * ((Float)0.5))));
HXLINE( 199)		this1->set_y((this1->y - (( (Float)(this1->frameWidth) ) * ((Float)0.5))));
HXLINE( 200)		this1->set_moves(false);
HXLINE( 189)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(CircleSprite_Impl__obj,_new,return )

Float CircleSprite_Impl__obj::get_radius( ::flixel::FlxSprite this1){
            	HX_STACKFRAME(&_hx_pos_12787fd799ce0f3e_207_get_radius)
HXDLIN( 207)		return (( (Float)(this1->frameWidth) ) * ((Float)0.5));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CircleSprite_Impl__obj,get_radius,return )

Float CircleSprite_Impl__obj::get_radiusSquared( ::flixel::FlxSprite this1){
            	HX_STACKFRAME(&_hx_pos_12787fd799ce0f3e_208_get_radiusSquared)
HXDLIN( 208)		return ((( (Float)(this1->frameWidth) ) * ((Float)0.5)) * (( (Float)(this1->frameWidth) ) * ((Float)0.5)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(CircleSprite_Impl__obj,get_radiusSquared,return )


CircleSprite_Impl__obj::CircleSprite_Impl__obj()
{
}

bool CircleSprite_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_radius") ) { outValue = get_radius_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_radiusSquared") ) { outValue = get_radiusSquared_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *CircleSprite_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *CircleSprite_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class CircleSprite_Impl__obj::__mClass;

static ::String CircleSprite_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("get_radius",1b,40,7e,a1),
	HX_("get_radiusSquared",4c,7a,3b,97),
	::String(null())
};

void CircleSprite_Impl__obj::__register()
{
	CircleSprite_Impl__obj _hx_dummy;
	CircleSprite_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.ui._FlxVirtualStick.CircleSprite_Impl_",e3,d2,39,84);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CircleSprite_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(CircleSprite_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< CircleSprite_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CircleSprite_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CircleSprite_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace ui
} // end namespace _FlxVirtualStick
