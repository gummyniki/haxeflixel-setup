// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_input_actions__FlxActionInputAnalog_FlxAnalogState_Impl_
#define INCLUDED_flixel_input_actions__FlxActionInputAnalog_FlxAnalogState_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(flixel,input,actions,_FlxActionInputAnalog,FlxAnalogState_Impl_)

namespace flixel{
namespace input{
namespace actions{
namespace _FlxActionInputAnalog{


class HXCPP_CLASS_ATTRIBUTES FlxAnalogState_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FlxAnalogState_Impl__obj OBJ_;
		FlxAnalogState_Impl__obj();

	public:
		enum { _hx_ClassId = 0x56be4af1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.input.actions._FlxActionInputAnalog.FlxAnalogState_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.input.actions._FlxActionInputAnalog.FlxAnalogState_Impl_"); }

		inline static ::hx::ObjectPtr< FlxAnalogState_Impl__obj > __new() {
			::hx::ObjectPtr< FlxAnalogState_Impl__obj > __this = new FlxAnalogState_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< FlxAnalogState_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			FlxAnalogState_Impl__obj *__this = (FlxAnalogState_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxAnalogState_Impl__obj), false, "flixel.input.actions._FlxActionInputAnalog.FlxAnalogState_Impl_"));
			*(void **)__this = FlxAnalogState_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxAnalogState_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxAnalogState_Impl_",6f,6c,1e,54); }

		static void __boot();
		static int JUST_STOPPED;
		static int STOPPED;
		static int MOVED;
		static int JUST_MOVED;
		static bool get_moved(int this1);
		static ::Dynamic get_moved_dyn();

		static bool get_justMoved(int this1);
		static ::Dynamic get_justMoved_dyn();

		static bool get_justStopped(int this1);
		static ::Dynamic get_justStopped_dyn();

		static bool get_stopped(int this1);
		static ::Dynamic get_stopped_dyn();

};

} // end namespace flixel
} // end namespace input
} // end namespace actions
} // end namespace _FlxActionInputAnalog

#endif /* INCLUDED_flixel_input_actions__FlxActionInputAnalog_FlxAnalogState_Impl_ */ 
