// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_ui_InvisibleCircleButton
#define INCLUDED_flixel_ui_InvisibleCircleButton

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_ui_FlxTypedButton_flixel_FlxSprite
#include <flixel/ui/FlxTypedButton_flixel_FlxSprite.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxCamera)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,input,FlxPointer)
HX_DECLARE_CLASS2(flixel,input,IFlxInput)
HX_DECLARE_CLASS2(flixel,math,FlxBasePoint)
HX_DECLARE_CLASS2(flixel,ui,FlxTypedButton_flixel_FlxSprite)
HX_DECLARE_CLASS2(flixel,ui,InvisibleCircleButton)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS2(flixel,util,IFlxPooled)

namespace flixel{
namespace ui{


class HXCPP_CLASS_ATTRIBUTES InvisibleCircleButton_obj : public  ::flixel::ui::FlxTypedButton_flixel_FlxSprite_obj
{
	public:
		typedef  ::flixel::ui::FlxTypedButton_flixel_FlxSprite_obj super;
		typedef InvisibleCircleButton_obj OBJ_;
		InvisibleCircleButton_obj();

	public:
		enum { _hx_ClassId = 0x313a21df };

		void __construct(::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y,Float radius, ::Dynamic onClick);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.ui.InvisibleCircleButton")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flixel.ui.InvisibleCircleButton"); }
		static ::hx::ObjectPtr< InvisibleCircleButton_obj > __new(::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y,Float radius, ::Dynamic onClick);
		static ::hx::ObjectPtr< InvisibleCircleButton_obj > __alloc(::hx::Ctx *_hx_ctx,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y,Float radius, ::Dynamic onClick);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~InvisibleCircleButton_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("InvisibleCircleButton",cf,d2,5c,19); }

		 ::flixel::input::FlxPointer lastPointer;
		Float get_radius();
		::Dynamic get_radius_dyn();

		void draw();

		bool checkInput( ::flixel::input::FlxPointer pointer,::Dynamic input, ::flixel::math::FlxBasePoint justPressedPosition, ::flixel::FlxCamera camera);

		void updateButton();

		void onUpHandler();

		bool overlapsPoint( ::flixel::math::FlxBasePoint point,::hx::Null< bool >  inScreenSpace, ::flixel::FlxCamera camera);

		 ::flixel::math::FlxBasePoint calcDeltaTo( ::flixel::math::FlxBasePoint point, ::flixel::FlxCamera camera, ::flixel::math::FlxBasePoint result);
		::Dynamic calcDeltaTo_dyn();

		 ::flixel::math::FlxBasePoint calcDeltaToPointer( ::flixel::FlxCamera camera, ::flixel::math::FlxBasePoint result);
		::Dynamic calcDeltaToPointer_dyn();

};

} // end namespace flixel
} // end namespace ui

#endif /* INCLUDED_flixel_ui_InvisibleCircleButton */ 
