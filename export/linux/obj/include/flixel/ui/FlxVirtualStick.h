// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_ui_FlxVirtualStick
#define INCLUDED_flixel_ui_FlxVirtualStick

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedSpriteContainer
#include <flixel/group/FlxTypedSpriteContainer.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteContainer)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,input,IFlxInput)
HX_DECLARE_CLASS2(flixel,math,FlxBasePoint)
HX_DECLARE_CLASS2(flixel,ui,FlxTypedButton_flixel_FlxSprite)
HX_DECLARE_CLASS2(flixel,ui,FlxVirtualStick)
HX_DECLARE_CLASS2(flixel,ui,InvisibleCircleButton)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS2(flixel,util,IFlxPooled)
HX_DECLARE_CLASS2(flixel,util,IFlxSignal)
HX_DECLARE_CLASS3(flixel,util,_FlxSignal,FlxBaseSignal)
HX_DECLARE_CLASS3(flixel,util,_FlxSignal,FlxSignal0)

namespace flixel{
namespace ui{


class HXCPP_CLASS_ATTRIBUTES FlxVirtualStick_obj : public  ::flixel::group::FlxTypedSpriteContainer_obj
{
	public:
		typedef  ::flixel::group::FlxTypedSpriteContainer_obj super;
		typedef FlxVirtualStick_obj OBJ_;
		FlxVirtualStick_obj();

	public:
		enum { _hx_ClassId = 0x1332aae3 };

		void __construct(::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y,::hx::Null< Float >  __o_radius, ::Dynamic baseGraphic, ::Dynamic thumbGraphic);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.ui.FlxVirtualStick")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flixel.ui.FlxVirtualStick"); }
		static ::hx::ObjectPtr< FlxVirtualStick_obj > __new(::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y,::hx::Null< Float >  __o_radius, ::Dynamic baseGraphic, ::Dynamic thumbGraphic);
		static ::hx::ObjectPtr< FlxVirtualStick_obj > __alloc(::hx::Ctx *_hx_ctx,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y,::hx::Null< Float >  __o_radius, ::Dynamic baseGraphic, ::Dynamic thumbGraphic);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxVirtualStick_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxVirtualStick",b7,7e,b7,e3); }

		 ::flixel::math::FlxBasePoint value;
		 ::flixel::FlxSprite thumb;
		 ::flixel::FlxSprite base;
		Float radius;
		Float lerp;
		Float deadzone;
		 ::flixel::util::_FlxSignal::FlxSignal0 onJustMove;
		 ::flixel::util::_FlxSignal::FlxSignal0 onJustStop;
		 ::flixel::util::_FlxSignal::FlxSignal0 onMove;
		int xStatus;
		int yStatus;
		int status;
		 ::flixel::ui::InvisibleCircleButton button;
		bool dragging;
		void destroy();

		void update(Float elapsed);

		void updateValue( ::flixel::math::FlxBasePoint pos);
		::Dynamic updateValue_dyn();

		int getStatus(Float prev,Float curr);
		::Dynamic getStatus_dyn();

};

} // end namespace flixel
} // end namespace ui

#endif /* INCLUDED_flixel_ui_FlxVirtualStick */ 
